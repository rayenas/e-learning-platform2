{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rayen\\\\OneDrive\\\\Bureau\\\\projet\\\\my-uvl\\\\src\\\\nav\\\\jwadou\\\\task\\\\tasks.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Navbarl from '../../Navbarl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tas = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploadedImage, setUploadedImage] = useState('');\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', file);\n  };\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  // Gestionnaire d'événements pour mettre à jour l'état lorsqu'une option est sélectionnée\n  const handleOptionChange = event => {\n    setSelectedOption(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: /*#__PURE__*/_jsxDEV(Navbarl, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(tas, \"bl8fFG2JxxqbjkzqsKORcbkmLwY=\");\nexport default tasks;","map":{"version":3,"names":["React","Navbarl","jsxDEV","_jsxDEV","tas","_s","file","setFile","useState","uploadedImage","setUploadedImage","handleFileChange","event","target","files","handleUpload","formData","FormData","append","selectedOption","setSelectedOption","handleOptionChange","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","tasks"],"sources":["C:/Users/rayen/OneDrive/Bureau/projet/my-uvl/src/nav/jwadou/task/tasks.js"],"sourcesContent":["import React from 'react'\r\nimport Navbarl from '../../Navbarl'\r\n\r\nconst tas = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [uploadedImage, setUploadedImage] = useState('');\r\n  \r\n    const handleFileChange = (event) => {\r\n      setFile(event.target.files[0]);\r\n    };\r\n  \r\n    const handleUpload = async () => {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n    };\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n  \r\n    // Gestionnaire d'événements pour mettre à jour l'état lorsqu'une option est sélectionnée\r\n    const handleOptionChange = (event) => {\r\n      setSelectedOption(event.target.value);\r\n    };\r\n  return (\r\n    <div className='tasks'>\r\n      <Navbarl />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default tasks\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMG,gBAAgB,GAAIC,KAAK,IAAK;IAClCL,OAAO,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEZ,IAAI,CAAC;EAC/B,CAAC;EACD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACA,MAAMa,kBAAkB,GAAIT,KAAK,IAAK;IACpCQ,iBAAiB,CAACR,KAAK,CAACC,MAAM,CAACS,KAAK,CAAC;EACvC,CAAC;EACH,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBrB,OAAA,CAACF,OAAO;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAER,CAAC;AAEV,CAAC;AAAAvB,EAAA,CAxBKD,GAAG;AA0BT,eAAeyB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}