{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rayen\\\\OneDrive\\\\Bureau\\\\projet\\\\my-uvl\\\\src\\\\nav\\\\jwadou\\\\task\\\\tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbarl from '../../Navbarl';\nimport './tas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploadedImage, setUploadedImage] = useState('');\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      // Assuming you have an API endpoint for uploading images\n      try {\n        const response = await fetch('your-upload-url', {\n          method: 'POST',\n          body: formData\n        });\n        const data = await response.json(); // Assuming response returns the uploaded image URL\n        setUploadedImage(data.imageUrl); // Update the uploadedImage state with the image URL\n      } catch (error) {\n        console.error('Error uploading the image:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(Navbarl, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"file\",\n      children: \"Select a file:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), uploadedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploaded-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: uploadedImage,\n        alt: \"Uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Tasks, \"71dQJ1Kj0+EqMQOPeus/GjI7xKY=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","Navbarl","jsxDEV","_jsxDEV","Tasks","_s","file","setFile","uploadedImage","setUploadedImage","handleFileChange","event","target","files","handleUpload","formData","FormData","append","response","fetch","method","body","data","json","imageUrl","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/rayen/OneDrive/Bureau/projet/my-uvl/src/nav/jwadou/task/tasks.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Navbarl from '../../Navbarl';\r\nimport './tas';\r\n\r\nconst Tasks = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [uploadedImage, setUploadedImage] = useState('');\r\n\r\n    const handleFileChange = (event) => {\r\n        setFile(event.target.files[0]);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (file) {\r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n\r\n            // Assuming you have an API endpoint for uploading images\r\n            try {\r\n                const response = await fetch('your-upload-url', {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                });\r\n                const data = await response.json(); // Assuming response returns the uploaded image URL\r\n                setUploadedImage(data.imageUrl); // Update the uploadedImage state with the image URL\r\n            } catch (error) {\r\n                console.error('Error uploading the image:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='tasks'>\r\n            <Navbarl />\r\n            <label htmlFor=\"file\">Select a file:</label>\r\n            <input type=\"file\" id=\"file\" onChange={handleFileChange} />\r\n            <button onClick={handleUpload}>Upload</button>\r\n            {uploadedImage && (\r\n                <div className=\"uploaded-image\">\r\n                    <img src={uploadedImage} alt=\"Uploaded\" />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tasks;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEf,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAChCJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAIR,IAAI,EAAE;MACN,MAAMS,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,IAAI,CAAC;;MAE7B;MACA,IAAI;QACA,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;UAC5CC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEN;QACV,CAAC,CAAC;QACF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;QACpCd,gBAAgB,CAACa,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC;MACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD;IACJ;EACJ,CAAC;EAED,oBACItB,OAAA;IAAKwB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBzB,OAAA,CAACF,OAAO;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACX7B,OAAA;MAAO8B,OAAO,EAAC,MAAM;MAAAL,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC5C7B,OAAA;MAAO+B,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,MAAM;MAACC,QAAQ,EAAE1B;IAAiB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3D7B,OAAA;MAAQkC,OAAO,EAAEvB,YAAa;MAAAc,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7CxB,aAAa,iBACVL,OAAA;MAAKwB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC3BzB,OAAA;QAAKmC,GAAG,EAAE9B,aAAc;QAAC+B,GAAG,EAAC;MAAU;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC3B,EAAA,CAxCID,KAAK;AAAAoC,EAAA,GAALpC,KAAK;AA0CX,eAAeA,KAAK;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}